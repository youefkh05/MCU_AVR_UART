
Task1_source_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000047c  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  0000047c  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000004ab  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000004b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000016e0  00000000  00000000  00000571  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000079c  00000000  00000000  00001c51  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000820  00000000  00000000  000023ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000124  00000000  00000000  00002c10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001d6  00000000  00000000  00002d34  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007de  00000000  00000000  00002f0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  000036e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000003fa  000003fa  0000046e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003770  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.DC_Initialize 0000004a  00000350  00000350  000003c4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.DC_Start 00000090  0000026c  0000026c  000002e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.DC_Stop 0000004a  0000039a  0000039a  0000040e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.main    00000054  000002fc  000002fc  00000370  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.DIO_SetPinDirection 000000e2  000000a8  000000a8  0000011c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.DIO_SetPinValue 000000e2  0000018a  0000018a  000001fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.__dummy_fini 00000002  00000402  00000402  00000476  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_funcs_on_exit 00000002  00000404  00000404  00000478  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_simulator_exit 00000002  00000406  00000406  0000047a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.exit    00000016  000003e4  000003e4  00000458  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text._Exit   00000004  000003fe  000003fe  00000472  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
   8:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
   c:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  10:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  14:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  18:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  1c:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  20:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  24:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  28:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  2c:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  30:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  34:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  38:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  3c:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  40:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  44:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  48:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  4c:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>
  50:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	e4 e5       	ldi	r30, 0x54	; 84
  62:	f0 e0       	ldi	r31, 0x00	; 0
  64:	40 e0       	ldi	r20, 0x00	; 0
  66:	17 c0       	rjmp	.+46     	; 0x96 <__do_clear_bss+0x8>
  68:	b5 91       	lpm	r27, Z+
  6a:	a5 91       	lpm	r26, Z+
  6c:	35 91       	lpm	r19, Z+
  6e:	25 91       	lpm	r18, Z+
  70:	05 91       	lpm	r16, Z+
  72:	07 fd       	sbrc	r16, 7
  74:	0c c0       	rjmp	.+24     	; 0x8e <__do_clear_bss>
  76:	95 91       	lpm	r25, Z+
  78:	85 91       	lpm	r24, Z+
  7a:	ef 01       	movw	r28, r30
  7c:	f9 2f       	mov	r31, r25
  7e:	e8 2f       	mov	r30, r24
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 17       	cp	r26, r18
  86:	b3 07       	cpc	r27, r19
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0x20>
  8a:	fe 01       	movw	r30, r28
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_clear_bss+0x8>

0000008e <__do_clear_bss>:
  8e:	1d 92       	st	X+, r1
  90:	a2 17       	cp	r26, r18
  92:	b3 07       	cpc	r27, r19
  94:	e1 f7       	brne	.-8      	; 0x8e <__do_clear_bss>
  96:	e4 35       	cpi	r30, 0x54	; 84
  98:	f4 07       	cpc	r31, r20
  9a:	31 f7       	brne	.-52     	; 0x68 <__do_copy_data+0x8>
  9c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <main>
  a0:	0c 94 f2 01 	jmp	0x3e4	; 0x3e4 <exit>

000000a4 <_exit>:
  a4:	f8 94       	cli

000000a6 <__stop_program>:
  a6:	ff cf       	rjmp	.-2      	; 0xa6 <__stop_program>

Disassembly of section .text:

000003fa <__bad_interrupt>:
 3fa:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.DC_Initialize:

00000350 <DC_Initialize>:

#include "DC_Private.h"

void DC_Initialize(dc_motor motor)
{
	switch(motor)
 350:	88 23       	and	r24, r24
 352:	19 f0       	breq	.+6      	; 0x35a <DC_Initialize+0xa>
 354:	81 30       	cpi	r24, 0x01	; 1
 356:	89 f0       	breq	.+34     	; 0x37a <DC_Initialize+0x2a>
 358:	08 95       	ret
	{
		case DC_Motor1:
		DIO_SetPinDirection(DC_Enable_Port, DC_Enable1_Pin, DC_OUTPUT);
 35a:	41 e0       	ldi	r20, 0x01	; 1
 35c:	60 e0       	ldi	r22, 0x00	; 0
 35e:	82 e0       	ldi	r24, 0x02	; 2
 360:	0e 94 54 00 	call	0xa8	; 0xa8 <__data_load_end>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor1_A1, DC_OUTPUT);
 364:	41 e0       	ldi	r20, 0x01	; 1
 366:	61 e0       	ldi	r22, 0x01	; 1
 368:	82 e0       	ldi	r24, 0x02	; 2
 36a:	0e 94 54 00 	call	0xa8	; 0xa8 <__data_load_end>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor1_A2, DC_OUTPUT);
 36e:	41 e0       	ldi	r20, 0x01	; 1
 370:	62 e0       	ldi	r22, 0x02	; 2
 372:	82 e0       	ldi	r24, 0x02	; 2
 374:	0e 94 54 00 	call	0xa8	; 0xa8 <__data_load_end>
		break;
 378:	08 95       	ret
		case DC_Motor2:
		DIO_SetPinDirection(DC_Enable_Port, DC_Enable2_Pin, DC_OUTPUT);
 37a:	41 e0       	ldi	r20, 0x01	; 1
 37c:	62 e0       	ldi	r22, 0x02	; 2
 37e:	82 e0       	ldi	r24, 0x02	; 2
 380:	0e 94 54 00 	call	0xa8	; 0xa8 <__data_load_end>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor2_A3, DC_OUTPUT);
 384:	41 e0       	ldi	r20, 0x01	; 1
 386:	62 e0       	ldi	r22, 0x02	; 2
 388:	82 e0       	ldi	r24, 0x02	; 2
 38a:	0e 94 54 00 	call	0xa8	; 0xa8 <__data_load_end>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor2_A4, DC_OUTPUT);
 38e:	41 e0       	ldi	r20, 0x01	; 1
 390:	62 e0       	ldi	r22, 0x02	; 2
 392:	82 e0       	ldi	r24, 0x02	; 2
 394:	0e 94 54 00 	call	0xa8	; 0xa8 <__data_load_end>
 398:	08 95       	ret

Disassembly of section .text.DC_Start:

0000026c <DC_Start>:
		break;
	}
}
void DC_Start(dc_motor motor, dc_motor_direction direction)
{
 26c:	cf 93       	push	r28
 26e:	c6 2f       	mov	r28, r22
	switch(motor)
 270:	88 23       	and	r24, r24
 272:	19 f0       	breq	.+6      	; 0x27a <DC_Start+0xe>
 274:	81 30       	cpi	r24, 0x01	; 1
 276:	09 f1       	breq	.+66     	; 0x2ba <DC_Start+0x4e>
 278:	3f c0       	rjmp	.+126    	; 0x2f8 <DC_Start+0x8c>
	{
		case DC_Motor1:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable1_Pin, DC_HIGH);
 27a:	41 e0       	ldi	r20, 0x01	; 1
 27c:	60 e0       	ldi	r22, 0x00	; 0
 27e:	82 e0       	ldi	r24, 0x02	; 2
 280:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		switch(direction)
 284:	cc 23       	and	r28, r28
 286:	19 f0       	breq	.+6      	; 0x28e <DC_Start+0x22>
 288:	c1 30       	cpi	r28, 0x01	; 1
 28a:	61 f0       	breq	.+24     	; 0x2a4 <DC_Start+0x38>
 28c:	35 c0       	rjmp	.+106    	; 0x2f8 <DC_Start+0x8c>
		{
			case DC_CW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A1, DC_HIGH);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	82 e0       	ldi	r24, 0x02	; 2
 294:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A2, DC_LOW);
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	62 e0       	ldi	r22, 0x02	; 2
 29c:	82 e0       	ldi	r24, 0x02	; 2
 29e:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
 2a2:	2a c0       	rjmp	.+84     	; 0x2f8 <DC_Start+0x8c>
			case DC_CCW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A1, DC_LOW);
 2a4:	40 e0       	ldi	r20, 0x00	; 0
 2a6:	61 e0       	ldi	r22, 0x01	; 1
 2a8:	82 e0       	ldi	r24, 0x02	; 2
 2aa:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A2, DC_HIGH);
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	62 e0       	ldi	r22, 0x02	; 2
 2b2:	82 e0       	ldi	r24, 0x02	; 2
 2b4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
 2b8:	1f c0       	rjmp	.+62     	; 0x2f8 <DC_Start+0x8c>
		}
		break;
		case DC_Motor2:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable2_Pin, DC_HIGH);
 2ba:	41 e0       	ldi	r20, 0x01	; 1
 2bc:	62 e0       	ldi	r22, 0x02	; 2
 2be:	82 e0       	ldi	r24, 0x02	; 2
 2c0:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		switch(direction)
 2c4:	cc 23       	and	r28, r28
 2c6:	19 f0       	breq	.+6      	; 0x2ce <DC_Start+0x62>
 2c8:	c1 30       	cpi	r28, 0x01	; 1
 2ca:	61 f0       	breq	.+24     	; 0x2e4 <DC_Start+0x78>
 2cc:	15 c0       	rjmp	.+42     	; 0x2f8 <DC_Start+0x8c>
		{
			case DC_CW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A3, DC_HIGH);
 2ce:	41 e0       	ldi	r20, 0x01	; 1
 2d0:	62 e0       	ldi	r22, 0x02	; 2
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A4, DC_LOW);
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	62 e0       	ldi	r22, 0x02	; 2
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
 2e2:	0a c0       	rjmp	.+20     	; 0x2f8 <DC_Start+0x8c>
			case DC_CCW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A3, DC_LOW);
 2e4:	40 e0       	ldi	r20, 0x00	; 0
 2e6:	62 e0       	ldi	r22, 0x02	; 2
 2e8:	82 e0       	ldi	r24, 0x02	; 2
 2ea:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A4, DC_HIGH);
 2ee:	41 e0       	ldi	r20, 0x01	; 1
 2f0:	62 e0       	ldi	r22, 0x02	; 2
 2f2:	82 e0       	ldi	r24, 0x02	; 2
 2f4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
		}
		break;
	}
}
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

Disassembly of section .text.DC_Stop:

0000039a <DC_Stop>:
void DC_Stop(dc_motor motor)
{
	switch(motor)
 39a:	88 23       	and	r24, r24
 39c:	19 f0       	breq	.+6      	; 0x3a4 <DC_Stop+0xa>
 39e:	81 30       	cpi	r24, 0x01	; 1
 3a0:	89 f0       	breq	.+34     	; 0x3c4 <DC_Stop+0x2a>
 3a2:	08 95       	ret
	{
		case DC_Motor1:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable1_Pin, DC_LOW);
 3a4:	40 e0       	ldi	r20, 0x00	; 0
 3a6:	60 e0       	ldi	r22, 0x00	; 0
 3a8:	82 e0       	ldi	r24, 0x02	; 2
 3aa:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A1, DC_LOW);
 3ae:	40 e0       	ldi	r20, 0x00	; 0
 3b0:	61 e0       	ldi	r22, 0x01	; 1
 3b2:	82 e0       	ldi	r24, 0x02	; 2
 3b4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A2, DC_LOW);
 3b8:	40 e0       	ldi	r20, 0x00	; 0
 3ba:	62 e0       	ldi	r22, 0x02	; 2
 3bc:	82 e0       	ldi	r24, 0x02	; 2
 3be:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		break;
 3c2:	08 95       	ret
		case DC_Motor2:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable2_Pin, DC_LOW);
 3c4:	40 e0       	ldi	r20, 0x00	; 0
 3c6:	62 e0       	ldi	r22, 0x02	; 2
 3c8:	82 e0       	ldi	r24, 0x02	; 2
 3ca:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A3, DC_LOW);
 3ce:	40 e0       	ldi	r20, 0x00	; 0
 3d0:	62 e0       	ldi	r22, 0x02	; 2
 3d2:	82 e0       	ldi	r24, 0x02	; 2
 3d4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A4, DC_LOW);
 3d8:	40 e0       	ldi	r20, 0x00	; 0
 3da:	62 e0       	ldi	r22, 0x02	; 2
 3dc:	82 e0       	ldi	r24, 0x02	; 2
 3de:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
 3e2:	08 95       	ret

Disassembly of section .text.main:

000002fc <main>:
#include "main.h"

int main(void)
{	int x=0;
	dc_motor motor1=DC_Motor1;
	DC_Initialize(motor1);
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 a8 01 	call	0x350	; 0x350 <DC_Initialize>
    while(1)
    {	x++;
		DC_Start(motor1, DC_CW);
 302:	60 e0       	ldi	r22, 0x00	; 0
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	0e 94 36 01 	call	0x26c	; 0x26c <DC_Start>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 30a:	2f ef       	ldi	r18, 0xFF	; 255
 30c:	87 ea       	ldi	r24, 0xA7	; 167
 30e:	91 e6       	ldi	r25, 0x61	; 97
 310:	21 50       	subi	r18, 0x01	; 1
 312:	80 40       	sbci	r24, 0x00	; 0
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	e1 f7       	brne	.-8      	; 0x310 <main+0x14>
 318:	00 c0       	rjmp	.+0      	; 0x31a <main+0x1e>
 31a:	00 00       	nop
		_delay_ms(2000);
		DC_Stop(motor1);
 31c:	80 e0       	ldi	r24, 0x00	; 0
 31e:	0e 94 cd 01 	call	0x39a	; 0x39a <DC_Stop>
 322:	2f ef       	ldi	r18, 0xFF	; 255
 324:	87 ea       	ldi	r24, 0xA7	; 167
 326:	91 e6       	ldi	r25, 0x61	; 97
 328:	21 50       	subi	r18, 0x01	; 1
 32a:	80 40       	sbci	r24, 0x00	; 0
 32c:	90 40       	sbci	r25, 0x00	; 0
 32e:	e1 f7       	brne	.-8      	; 0x328 <main+0x2c>
 330:	00 c0       	rjmp	.+0      	; 0x332 <main+0x36>
 332:	00 00       	nop
		_delay_ms(2000);
		DC_Start(motor1, DC_CCW);
 334:	61 e0       	ldi	r22, 0x01	; 1
 336:	80 e0       	ldi	r24, 0x00	; 0
 338:	0e 94 36 01 	call	0x26c	; 0x26c <DC_Start>
 33c:	2f ef       	ldi	r18, 0xFF	; 255
 33e:	87 ea       	ldi	r24, 0xA7	; 167
 340:	91 e6       	ldi	r25, 0x61	; 97
 342:	21 50       	subi	r18, 0x01	; 1
 344:	80 40       	sbci	r24, 0x00	; 0
 346:	90 40       	sbci	r25, 0x00	; 0
 348:	e1 f7       	brne	.-8      	; 0x342 <main+0x46>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <main+0x50>
 34c:	00 00       	nop
 34e:	d9 cf       	rjmp	.-78     	; 0x302 <main+0x6>

Disassembly of section .text.DIO_SetPinDirection:

000000a8 <DIO_SetPinDirection>:
#include "DIO_Private.h"

/*------------------------PINS---------------------------*/
void DIO_SetPinDirection(port Port, pin Pin, state State)
{
	switch(State)
  a8:	44 23       	and	r20, r20
  aa:	19 f0       	breq	.+6      	; 0xb2 <DIO_SetPinDirection+0xa>
  ac:	41 30       	cpi	r20, 0x01	; 1
  ae:	c9 f1       	breq	.+114    	; 0x122 <DIO_SetPinDirection+0x7a>
  b0:	08 95       	ret
	{
		case DIO_INPUT:
		switch (Port)
  b2:	81 30       	cpi	r24, 0x01	; 1
  b4:	91 f0       	breq	.+36     	; 0xda <DIO_SetPinDirection+0x32>
  b6:	28 f0       	brcs	.+10     	; 0xc2 <DIO_SetPinDirection+0x1a>
  b8:	82 30       	cpi	r24, 0x02	; 2
  ba:	d9 f0       	breq	.+54     	; 0xf2 <DIO_SetPinDirection+0x4a>
  bc:	83 30       	cpi	r24, 0x03	; 3
  be:	29 f1       	breq	.+74     	; 0x10a <DIO_SetPinDirection+0x62>
  c0:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(DDRA, Pin);
  c2:	2a b3       	in	r18, 0x1a	; 26
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_SetPinDirection+0x26>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_SetPinDirection+0x22>
  d2:	80 95       	com	r24
  d4:	82 23       	and	r24, r18
  d6:	8a bb       	out	0x1a, r24	; 26
			break;
  d8:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(DDRB, Pin);
  da:	27 b3       	in	r18, 0x17	; 23
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <DIO_SetPinDirection+0x3e>
  e2:	88 0f       	add	r24, r24
  e4:	99 1f       	adc	r25, r25
  e6:	6a 95       	dec	r22
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <DIO_SetPinDirection+0x3a>
  ea:	80 95       	com	r24
  ec:	82 23       	and	r24, r18
  ee:	87 bb       	out	0x17, r24	; 23
			break;
  f0:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(DDRC, Pin);
  f2:	24 b3       	in	r18, 0x14	; 20
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_SetPinDirection+0x56>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_SetPinDirection+0x52>
 102:	80 95       	com	r24
 104:	82 23       	and	r24, r18
 106:	84 bb       	out	0x14, r24	; 20
			break;
 108:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(DDRD, Pin);
 10a:	21 b3       	in	r18, 0x11	; 17
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_SetPinDirection+0x6e>
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	6a 95       	dec	r22
 118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_SetPinDirection+0x6a>
 11a:	80 95       	com	r24
 11c:	82 23       	and	r24, r18
 11e:	81 bb       	out	0x11, r24	; 17
			break;
 120:	08 95       	ret
		}
		break;
		case DIO_OUTPUT:
		switch (Port)
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	89 f0       	breq	.+34     	; 0x148 <DIO_SetPinDirection+0xa0>
 126:	28 f0       	brcs	.+10     	; 0x132 <DIO_SetPinDirection+0x8a>
 128:	82 30       	cpi	r24, 0x02	; 2
 12a:	c9 f0       	breq	.+50     	; 0x15e <DIO_SetPinDirection+0xb6>
 12c:	83 30       	cpi	r24, 0x03	; 3
 12e:	11 f1       	breq	.+68     	; 0x174 <DIO_SetPinDirection+0xcc>
 130:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(DDRA, Pin);
 132:	2a b3       	in	r18, 0x1a	; 26
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <DIO_SetPinDirection+0x96>
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <DIO_SetPinDirection+0x92>
 142:	82 2b       	or	r24, r18
 144:	8a bb       	out	0x1a, r24	; 26
			break;
 146:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(DDRB, Pin);
 148:	27 b3       	in	r18, 0x17	; 23
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_SetPinDirection+0xac>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_SetPinDirection+0xa8>
 158:	82 2b       	or	r24, r18
 15a:	87 bb       	out	0x17, r24	; 23
			break;
 15c:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(DDRC, Pin);
 15e:	24 b3       	in	r18, 0x14	; 20
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_SetPinDirection+0xc2>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	6a 95       	dec	r22
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_SetPinDirection+0xbe>
 16e:	82 2b       	or	r24, r18
 170:	84 bb       	out	0x14, r24	; 20
			break;
 172:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(DDRD, Pin);
 174:	21 b3       	in	r18, 0x11	; 17
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_SetPinDirection+0xd8>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_SetPinDirection+0xd4>
 184:	82 2b       	or	r24, r18
 186:	81 bb       	out	0x11, r24	; 17
 188:	08 95       	ret

Disassembly of section .text.DIO_SetPinValue:

0000018a <DIO_SetPinValue>:
		break;
	}
}
void DIO_SetPinValue(port Port, pin Pin, status Status)
{
	switch(Status)
 18a:	44 23       	and	r20, r20
 18c:	19 f0       	breq	.+6      	; 0x194 <DIO_SetPinValue+0xa>
 18e:	41 30       	cpi	r20, 0x01	; 1
 190:	c9 f1       	breq	.+114    	; 0x204 <DIO_SetPinValue+0x7a>
 192:	08 95       	ret
	{
		case DIO_LOW:
		switch (Port)
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	91 f0       	breq	.+36     	; 0x1bc <DIO_SetPinValue+0x32>
 198:	28 f0       	brcs	.+10     	; 0x1a4 <DIO_SetPinValue+0x1a>
 19a:	82 30       	cpi	r24, 0x02	; 2
 19c:	d9 f0       	breq	.+54     	; 0x1d4 <DIO_SetPinValue+0x4a>
 19e:	83 30       	cpi	r24, 0x03	; 3
 1a0:	29 f1       	breq	.+74     	; 0x1ec <DIO_SetPinValue+0x62>
 1a2:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(PORTA, Pin);
 1a4:	2b b3       	in	r18, 0x1b	; 27
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_SetPinValue+0x26>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_SetPinValue+0x22>
 1b4:	80 95       	com	r24
 1b6:	82 23       	and	r24, r18
 1b8:	8b bb       	out	0x1b, r24	; 27
			break;
 1ba:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(PORTB, Pin);
 1bc:	28 b3       	in	r18, 0x18	; 24
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_SetPinValue+0x3e>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_SetPinValue+0x3a>
 1cc:	80 95       	com	r24
 1ce:	82 23       	and	r24, r18
 1d0:	88 bb       	out	0x18, r24	; 24
			break;
 1d2:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(PORTC, Pin);
 1d4:	25 b3       	in	r18, 0x15	; 21
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_SetPinValue+0x56>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_SetPinValue+0x52>
 1e4:	80 95       	com	r24
 1e6:	82 23       	and	r24, r18
 1e8:	85 bb       	out	0x15, r24	; 21
			break;
 1ea:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(PORTD, Pin);
 1ec:	22 b3       	in	r18, 0x12	; 18
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_SetPinValue+0x6e>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_SetPinValue+0x6a>
 1fc:	80 95       	com	r24
 1fe:	82 23       	and	r24, r18
 200:	82 bb       	out	0x12, r24	; 18
			break;
 202:	08 95       	ret
		}
		break;
		case DIO_HIGH:
		switch (Port)
 204:	81 30       	cpi	r24, 0x01	; 1
 206:	89 f0       	breq	.+34     	; 0x22a <DIO_SetPinValue+0xa0>
 208:	28 f0       	brcs	.+10     	; 0x214 <DIO_SetPinValue+0x8a>
 20a:	82 30       	cpi	r24, 0x02	; 2
 20c:	c9 f0       	breq	.+50     	; 0x240 <DIO_SetPinValue+0xb6>
 20e:	83 30       	cpi	r24, 0x03	; 3
 210:	11 f1       	breq	.+68     	; 0x256 <DIO_SetPinValue+0xcc>
 212:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(PORTA, Pin);
 214:	2b b3       	in	r18, 0x1b	; 27
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_SetPinValue+0x96>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_SetPinValue+0x92>
 224:	82 2b       	or	r24, r18
 226:	8b bb       	out	0x1b, r24	; 27
			break;
 228:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(PORTB, Pin);
 22a:	28 b3       	in	r18, 0x18	; 24
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_SetPinValue+0xac>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_SetPinValue+0xa8>
 23a:	82 2b       	or	r24, r18
 23c:	88 bb       	out	0x18, r24	; 24
			break;
 23e:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(PORTC, Pin);
 240:	25 b3       	in	r18, 0x15	; 21
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_SetPinValue+0xc2>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_SetPinValue+0xbe>
 250:	82 2b       	or	r24, r18
 252:	85 bb       	out	0x15, r24	; 21
			break;
 254:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(PORTD, Pin);
 256:	22 b3       	in	r18, 0x12	; 18
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_SetPinValue+0xd8>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_SetPinValue+0xd4>
 266:	82 2b       	or	r24, r18
 268:	82 bb       	out	0x12, r24	; 18
 26a:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000402 <_fini>:
 402:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000404 <__funcs_on_exit>:
 404:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000406 <__simulator_exit>:
 406:	08 95       	ret

Disassembly of section .text.exit:

000003e4 <exit>:
 3e4:	ec 01       	movw	r28, r24
 3e6:	0e 94 02 02 	call	0x404	; 0x404 <__funcs_on_exit>
 3ea:	0e 94 01 02 	call	0x402	; 0x402 <_fini>
 3ee:	ce 01       	movw	r24, r28
 3f0:	0e 94 03 02 	call	0x406	; 0x406 <__simulator_exit>
 3f4:	ce 01       	movw	r24, r28
 3f6:	0e 94 ff 01 	call	0x3fe	; 0x3fe <_Exit>

Disassembly of section .text._Exit:

000003fe <_Exit>:
 3fe:	0e 94 52 00 	call	0xa4	; 0xa4 <_exit>
