
Task1_source_code.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000590  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  000005bf  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000188  00000000  00000000  000005cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002867  00000000  00000000  00000755  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009a9  00000000  00000000  00002fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000c7a  00000000  00000000  00003965  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000254  00000000  00000000  000045e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ee  00000000  00000000  00004834  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007de  00000000  00000000  00004b22  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000118  00000000  00000000  00005300  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000050e  0000050e  00000582  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00005418  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.LED1_Initialize 0000000c  000004cc  000004cc  00000540  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.LED1_TGL 0000000a  000004f0  000004f0  00000564  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.LED2_Initialize 0000000c  000004d8  000004d8  0000054c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.LED2_TGL 0000000a  000004fa  000004fa  0000056e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.LED3_Initialize 0000000c  000004e4  000004e4  00000558  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.LED3_TGL 0000000a  00000504  00000504  00000578  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.DC_Initialize 0000004a  000003ec  000003ec  00000460  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.DC_Start 00000090  0000026c  0000026c  000002e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.DC_Stop 0000004a  00000436  00000436  000004aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.ServoMotor_Initialize 0000001c  00000480  00000480  000004f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.ServoMotor_Rotate 0000001a  0000049c  0000049c  00000510  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.main    00000088  000002fc  000002fc  00000370  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.DIO_SetPinDirection 000000e2  000000a8  000000a8  0000011c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.DIO_SetPinValue 000000e2  0000018a  0000018a  000001fe  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.DIO_TogglePinValue 00000068  00000384  00000384  000003f8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_fini 00000002  00000516  00000516  0000058a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__dummy_funcs_on_exit 00000002  00000518  00000518  0000058c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_simulator_exit 00000002  0000051a  0000051a  0000058e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.exit    00000016  000004b6  000004b6  0000052a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text._Exit   00000004  00000512  00000512  00000586  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
   8:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
   c:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  10:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  14:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  18:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  1c:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  20:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  24:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  28:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  2c:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  30:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  34:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  38:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  3c:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  40:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  44:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  48:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  4c:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>
  50:	0c 94 87 02 	jmp	0x50e	; 0x50e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	e4 e5       	ldi	r30, 0x54	; 84
  62:	f0 e0       	ldi	r31, 0x00	; 0
  64:	40 e0       	ldi	r20, 0x00	; 0
  66:	17 c0       	rjmp	.+46     	; 0x96 <__do_clear_bss+0x8>
  68:	b5 91       	lpm	r27, Z+
  6a:	a5 91       	lpm	r26, Z+
  6c:	35 91       	lpm	r19, Z+
  6e:	25 91       	lpm	r18, Z+
  70:	05 91       	lpm	r16, Z+
  72:	07 fd       	sbrc	r16, 7
  74:	0c c0       	rjmp	.+24     	; 0x8e <__do_clear_bss>
  76:	95 91       	lpm	r25, Z+
  78:	85 91       	lpm	r24, Z+
  7a:	ef 01       	movw	r28, r30
  7c:	f9 2f       	mov	r31, r25
  7e:	e8 2f       	mov	r30, r24
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 17       	cp	r26, r18
  86:	b3 07       	cpc	r27, r19
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0x20>
  8a:	fe 01       	movw	r30, r28
  8c:	04 c0       	rjmp	.+8      	; 0x96 <__do_clear_bss+0x8>

0000008e <__do_clear_bss>:
  8e:	1d 92       	st	X+, r1
  90:	a2 17       	cp	r26, r18
  92:	b3 07       	cpc	r27, r19
  94:	e1 f7       	brne	.-8      	; 0x8e <__do_clear_bss>
  96:	e4 35       	cpi	r30, 0x54	; 84
  98:	f4 07       	cpc	r31, r20
  9a:	31 f7       	brne	.-52     	; 0x68 <__do_copy_data+0x8>
  9c:	0e 94 7e 01 	call	0x2fc	; 0x2fc <main>
  a0:	0c 94 5b 02 	jmp	0x4b6	; 0x4b6 <exit>

000000a4 <_exit>:
  a4:	f8 94       	cli

000000a6 <__stop_program>:
  a6:	ff cf       	rjmp	.-2      	; 0xa6 <__stop_program>

Disassembly of section .text:

0000050e <__bad_interrupt>:
 50e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.LED1_Initialize:

000004cc <LED1_Initialize>:
{
	DIO_SetPinValue(LED1_PORT, LED1_PIN, LED1_HIGH);
}
void LED1_OFF(void)
{
	DIO_SetPinValue(LED1_PORT, LED1_PIN, LED1_LOW);
 4cc:	41 e0       	ldi	r20, 0x01	; 1
 4ce:	60 e0       	ldi	r22, 0x00	; 0
 4d0:	81 e0       	ldi	r24, 0x01	; 1
 4d2:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
 4d6:	08 95       	ret

Disassembly of section .text.LED1_TGL:

000004f0 <LED1_TGL>:
}
void LED1_TGL(void)
{
	DIO_TogglePinValue(LED1_PORT, LED1_PIN);
 4f0:	60 e0       	ldi	r22, 0x00	; 0
 4f2:	81 e0       	ldi	r24, 0x01	; 1
 4f4:	0e 94 c2 01 	call	0x384	; 0x384 <DIO_TogglePinValue>
 4f8:	08 95       	ret

Disassembly of section .text.LED2_Initialize:

000004d8 <LED2_Initialize>:
{
	DIO_SetPinValue(LED2_PORT, LED2_PIN, LED2_HIGH);
}
void LED2_OFF(void)
{
	DIO_SetPinValue(LED2_PORT, LED2_PIN, LED2_LOW);
 4d8:	41 e0       	ldi	r20, 0x01	; 1
 4da:	61 e0       	ldi	r22, 0x01	; 1
 4dc:	81 e0       	ldi	r24, 0x01	; 1
 4de:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
 4e2:	08 95       	ret

Disassembly of section .text.LED2_TGL:

000004fa <LED2_TGL>:
}
void LED2_TGL(void)
{
	DIO_TogglePinValue(LED2_PORT, LED2_PIN);
 4fa:	61 e0       	ldi	r22, 0x01	; 1
 4fc:	81 e0       	ldi	r24, 0x01	; 1
 4fe:	0e 94 c2 01 	call	0x384	; 0x384 <DIO_TogglePinValue>
 502:	08 95       	ret

Disassembly of section .text.LED3_Initialize:

000004e4 <LED3_Initialize>:
{
	DIO_SetPinValue(LED3_PORT, LED3_PIN, LED3_HIGH);
}
void LED3_OFF(void)
{
	DIO_SetPinValue(LED3_PORT, LED3_PIN, LED3_LOW);
 4e4:	41 e0       	ldi	r20, 0x01	; 1
 4e6:	62 e0       	ldi	r22, 0x02	; 2
 4e8:	81 e0       	ldi	r24, 0x01	; 1
 4ea:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
 4ee:	08 95       	ret

Disassembly of section .text.LED3_TGL:

00000504 <LED3_TGL>:
}
void LED3_TGL(void)
{
	DIO_TogglePinValue(LED3_PORT, LED3_PIN);
 504:	62 e0       	ldi	r22, 0x02	; 2
 506:	81 e0       	ldi	r24, 0x01	; 1
 508:	0e 94 c2 01 	call	0x384	; 0x384 <DIO_TogglePinValue>
 50c:	08 95       	ret

Disassembly of section .text.DC_Initialize:

000003ec <DC_Initialize>:

#include "DC_Private.h"

void DC_Initialize(dc_motor motor)
{
	switch(motor)
 3ec:	88 23       	and	r24, r24
 3ee:	19 f0       	breq	.+6      	; 0x3f6 <DC_Initialize+0xa>
 3f0:	81 30       	cpi	r24, 0x01	; 1
 3f2:	89 f0       	breq	.+34     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 3f4:	08 95       	ret
	{
		case DC_Motor1:
		DIO_SetPinDirection(DC_Enable_Port, DC_Enable1_Pin, DC_OUTPUT);
 3f6:	41 e0       	ldi	r20, 0x01	; 1
 3f8:	60 e0       	ldi	r22, 0x00	; 0
 3fa:	82 e0       	ldi	r24, 0x02	; 2
 3fc:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor1_A1, DC_OUTPUT);
 400:	41 e0       	ldi	r20, 0x01	; 1
 402:	61 e0       	ldi	r22, 0x01	; 1
 404:	82 e0       	ldi	r24, 0x02	; 2
 406:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor1_A2, DC_OUTPUT);
 40a:	41 e0       	ldi	r20, 0x01	; 1
 40c:	62 e0       	ldi	r22, 0x02	; 2
 40e:	82 e0       	ldi	r24, 0x02	; 2
 410:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
		break;
 414:	08 95       	ret
		case DC_Motor2:
		DIO_SetPinDirection(DC_Enable_Port, DC_Enable2_Pin, DC_OUTPUT);
 416:	41 e0       	ldi	r20, 0x01	; 1
 418:	62 e0       	ldi	r22, 0x02	; 2
 41a:	82 e0       	ldi	r24, 0x02	; 2
 41c:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor2_A3, DC_OUTPUT);
 420:	41 e0       	ldi	r20, 0x01	; 1
 422:	62 e0       	ldi	r22, 0x02	; 2
 424:	82 e0       	ldi	r24, 0x02	; 2
 426:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
		DIO_SetPinDirection(DC_Motor_Port, DC_Motor2_A4, DC_OUTPUT);
 42a:	41 e0       	ldi	r20, 0x01	; 1
 42c:	62 e0       	ldi	r22, 0x02	; 2
 42e:	82 e0       	ldi	r24, 0x02	; 2
 430:	0e 94 54 00 	call	0xa8	; 0xa8 <_etext>
 434:	08 95       	ret

Disassembly of section .text.DC_Start:

0000026c <DC_Start>:
		break;
	}
}
void DC_Start(dc_motor motor, dc_motor_direction direction)
{
 26c:	cf 93       	push	r28
 26e:	c6 2f       	mov	r28, r22
	switch(motor)
 270:	88 23       	and	r24, r24
 272:	19 f0       	breq	.+6      	; 0x27a <DC_Start+0xe>
 274:	81 30       	cpi	r24, 0x01	; 1
 276:	09 f1       	breq	.+66     	; 0x2ba <DC_Start+0x4e>
 278:	3f c0       	rjmp	.+126    	; 0x2f8 <DC_Start+0x8c>
	{
		case DC_Motor1:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable1_Pin, DC_HIGH);
 27a:	41 e0       	ldi	r20, 0x01	; 1
 27c:	60 e0       	ldi	r22, 0x00	; 0
 27e:	82 e0       	ldi	r24, 0x02	; 2
 280:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		switch(direction)
 284:	cc 23       	and	r28, r28
 286:	19 f0       	breq	.+6      	; 0x28e <DC_Start+0x22>
 288:	c1 30       	cpi	r28, 0x01	; 1
 28a:	61 f0       	breq	.+24     	; 0x2a4 <DC_Start+0x38>
 28c:	35 c0       	rjmp	.+106    	; 0x2f8 <DC_Start+0x8c>
		{
			case DC_CW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A1, DC_HIGH);
 28e:	41 e0       	ldi	r20, 0x01	; 1
 290:	61 e0       	ldi	r22, 0x01	; 1
 292:	82 e0       	ldi	r24, 0x02	; 2
 294:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A2, DC_LOW);
 298:	40 e0       	ldi	r20, 0x00	; 0
 29a:	62 e0       	ldi	r22, 0x02	; 2
 29c:	82 e0       	ldi	r24, 0x02	; 2
 29e:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
 2a2:	2a c0       	rjmp	.+84     	; 0x2f8 <DC_Start+0x8c>
			case DC_CCW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A1, DC_LOW);
 2a4:	40 e0       	ldi	r20, 0x00	; 0
 2a6:	61 e0       	ldi	r22, 0x01	; 1
 2a8:	82 e0       	ldi	r24, 0x02	; 2
 2aa:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A2, DC_HIGH);
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	62 e0       	ldi	r22, 0x02	; 2
 2b2:	82 e0       	ldi	r24, 0x02	; 2
 2b4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
 2b8:	1f c0       	rjmp	.+62     	; 0x2f8 <DC_Start+0x8c>
		}
		break;
		case DC_Motor2:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable2_Pin, DC_HIGH);
 2ba:	41 e0       	ldi	r20, 0x01	; 1
 2bc:	62 e0       	ldi	r22, 0x02	; 2
 2be:	82 e0       	ldi	r24, 0x02	; 2
 2c0:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		switch(direction)
 2c4:	cc 23       	and	r28, r28
 2c6:	19 f0       	breq	.+6      	; 0x2ce <DC_Start+0x62>
 2c8:	c1 30       	cpi	r28, 0x01	; 1
 2ca:	61 f0       	breq	.+24     	; 0x2e4 <DC_Start+0x78>
 2cc:	15 c0       	rjmp	.+42     	; 0x2f8 <DC_Start+0x8c>
		{
			case DC_CW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A3, DC_HIGH);
 2ce:	41 e0       	ldi	r20, 0x01	; 1
 2d0:	62 e0       	ldi	r22, 0x02	; 2
 2d2:	82 e0       	ldi	r24, 0x02	; 2
 2d4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A4, DC_LOW);
 2d8:	40 e0       	ldi	r20, 0x00	; 0
 2da:	62 e0       	ldi	r22, 0x02	; 2
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
 2e2:	0a c0       	rjmp	.+20     	; 0x2f8 <DC_Start+0x8c>
			case DC_CCW:
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A3, DC_LOW);
 2e4:	40 e0       	ldi	r20, 0x00	; 0
 2e6:	62 e0       	ldi	r22, 0x02	; 2
 2e8:	82 e0       	ldi	r24, 0x02	; 2
 2ea:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A4, DC_HIGH);
 2ee:	41 e0       	ldi	r20, 0x01	; 1
 2f0:	62 e0       	ldi	r22, 0x02	; 2
 2f2:	82 e0       	ldi	r24, 0x02	; 2
 2f4:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
			break;
		}
		break;
	}
}
 2f8:	cf 91       	pop	r28
 2fa:	08 95       	ret

Disassembly of section .text.DC_Stop:

00000436 <DC_Stop>:
void DC_Stop(dc_motor motor)
{
	switch(motor)
 436:	88 23       	and	r24, r24
 438:	19 f0       	breq	.+6      	; 0x440 <DC_Stop+0xa>
 43a:	81 30       	cpi	r24, 0x01	; 1
 43c:	89 f0       	breq	.+34     	; 0x460 <DC_Stop+0x2a>
 43e:	08 95       	ret
	{
		case DC_Motor1:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable1_Pin, DC_LOW);
 440:	40 e0       	ldi	r20, 0x00	; 0
 442:	60 e0       	ldi	r22, 0x00	; 0
 444:	82 e0       	ldi	r24, 0x02	; 2
 446:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A1, DC_LOW);
 44a:	40 e0       	ldi	r20, 0x00	; 0
 44c:	61 e0       	ldi	r22, 0x01	; 1
 44e:	82 e0       	ldi	r24, 0x02	; 2
 450:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor1_A2, DC_LOW);
 454:	40 e0       	ldi	r20, 0x00	; 0
 456:	62 e0       	ldi	r22, 0x02	; 2
 458:	82 e0       	ldi	r24, 0x02	; 2
 45a:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		break;
 45e:	08 95       	ret
		case DC_Motor2:
		DIO_SetPinValue(DC_Enable_Port, DC_Enable2_Pin, DC_LOW);
 460:	40 e0       	ldi	r20, 0x00	; 0
 462:	62 e0       	ldi	r22, 0x02	; 2
 464:	82 e0       	ldi	r24, 0x02	; 2
 466:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A3, DC_LOW);
 46a:	40 e0       	ldi	r20, 0x00	; 0
 46c:	62 e0       	ldi	r22, 0x02	; 2
 46e:	82 e0       	ldi	r24, 0x02	; 2
 470:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
		DIO_SetPinValue(DC_Motor_Port, DC_Motor2_A4, DC_LOW);
 474:	40 e0       	ldi	r20, 0x00	; 0
 476:	62 e0       	ldi	r22, 0x02	; 2
 478:	82 e0       	ldi	r24, 0x02	; 2
 47a:	0e 94 c5 00 	call	0x18a	; 0x18a <DIO_SetPinValue>
 47e:	08 95       	ret

Disassembly of section .text.ServoMotor_Initialize:

00000480 <ServoMotor_Initialize>:

#include "Servo_Private.h"

void ServoMotor_Initialize(void)
{
	DDRD |= (1<<PD5);	/* Make OC1A pin as output */
 480:	81 b3       	in	r24, 0x11	; 17
 482:	80 62       	ori	r24, 0x20	; 32
 484:	81 bb       	out	0x11, r24	; 17
	TCNT1 = 0;			/* Set timer1 count zero */
 486:	1d bc       	out	0x2d, r1	; 45
 488:	1c bc       	out	0x2c, r1	; 44
	ICR1 = 2499;		/* Set TOP count for timer1 in ICR1 register */
 48a:	83 ec       	ldi	r24, 0xC3	; 195
 48c:	99 e0       	ldi	r25, 0x09	; 9
 48e:	97 bd       	out	0x27, r25	; 39
 490:	86 bd       	out	0x26, r24	; 38

	/* Set Fast PWM, TOP in ICR1, Clear OC1A on compare match, clk/64 */
	TCCR1A = (1<<WGM11)|(1<<COM1A1);
 492:	82 e8       	ldi	r24, 0x82	; 130
 494:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1<<WGM12)|(1<<WGM13)|(1<<CS10)|(1<<CS11);
 496:	8b e1       	ldi	r24, 0x1B	; 27
 498:	8e bd       	out	0x2e, r24	; 46
 49a:	08 95       	ret

Disassembly of section .text.ServoMotor_Rotate:

0000049c <ServoMotor_Rotate>:
	
}

void ServoMotor_Rotate(servo_angle angle)
{
	OCR1A=((ICR1+1)/4)-angle;
 49c:	26 b5       	in	r18, 0x26	; 38
 49e:	37 b5       	in	r19, 0x27	; 39
 4a0:	2f 5f       	subi	r18, 0xFF	; 255
 4a2:	3f 4f       	sbci	r19, 0xFF	; 255
 4a4:	36 95       	lsr	r19
 4a6:	27 95       	ror	r18
 4a8:	36 95       	lsr	r19
 4aa:	27 95       	ror	r18
 4ac:	28 1b       	sub	r18, r24
 4ae:	39 0b       	sbc	r19, r25
 4b0:	3b bd       	out	0x2b, r19	; 43
 4b2:	2a bd       	out	0x2a, r18	; 42
 4b4:	08 95       	ret

Disassembly of section .text.main:

000002fc <main>:
#include "main.h"

int main(void)
{	int x=0;
	dc_motor motor1=DC_Motor1;
	DC_Initialize(motor1);
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	0e 94 f6 01 	call	0x3ec	; 0x3ec <DC_Initialize>
	LED1_Initialize();
 302:	0e 94 66 02 	call	0x4cc	; 0x4cc <LED1_Initialize>
	LED2_Initialize();
 306:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <LED2_Initialize>
	LED3_Initialize();
 30a:	0e 94 72 02 	call	0x4e4	; 0x4e4 <LED3_Initialize>
	ServoMotor_Initialize();
 30e:	0e 94 40 02 	call	0x480	; 0x480 <ServoMotor_Initialize>
    while(1)
    {	x++;
		LED1_TGL();
 312:	0e 94 78 02 	call	0x4f0	; 0x4f0 <LED1_TGL>
		LED2_TGL();
 316:	0e 94 7d 02 	call	0x4fa	; 0x4fa <LED2_TGL>
		LED3_TGL();
 31a:	0e 94 82 02 	call	0x504	; 0x504 <LED3_TGL>
		ServoMotor_Rotate(angle_P90);
 31e:	85 e4       	ldi	r24, 0x45	; 69
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	0e 94 4e 02 	call	0x49c	; 0x49c <ServoMotor_Rotate>
		DC_Start(motor1, DC_CW);
 326:	60 e0       	ldi	r22, 0x00	; 0
 328:	80 e0       	ldi	r24, 0x00	; 0
 32a:	0e 94 36 01 	call	0x26c	; 0x26c <DC_Start>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 32e:	2f ef       	ldi	r18, 0xFF	; 255
 330:	87 ea       	ldi	r24, 0xA7	; 167
 332:	91 e6       	ldi	r25, 0x61	; 97
 334:	21 50       	subi	r18, 0x01	; 1
 336:	80 40       	sbci	r24, 0x00	; 0
 338:	90 40       	sbci	r25, 0x00	; 0
 33a:	e1 f7       	brne	.-8      	; 0x334 <main+0x38>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <main+0x42>
 33e:	00 00       	nop
		_delay_ms(2000);
		DC_Stop(motor1);
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	0e 94 1b 02 	call	0x436	; 0x436 <DC_Stop>
		ServoMotor_Rotate(angle_0);
 346:	86 eb       	ldi	r24, 0xB6	; 182
 348:	91 e0       	ldi	r25, 0x01	; 1
 34a:	0e 94 4e 02 	call	0x49c	; 0x49c <ServoMotor_Rotate>
 34e:	2f ef       	ldi	r18, 0xFF	; 255
 350:	87 ea       	ldi	r24, 0xA7	; 167
 352:	91 e6       	ldi	r25, 0x61	; 97
 354:	21 50       	subi	r18, 0x01	; 1
 356:	80 40       	sbci	r24, 0x00	; 0
 358:	90 40       	sbci	r25, 0x00	; 0
 35a:	e1 f7       	brne	.-8      	; 0x354 <main+0x58>
 35c:	00 c0       	rjmp	.+0      	; 0x35e <main+0x62>
 35e:	00 00       	nop
		_delay_ms(2000);
		DC_Start(motor1, DC_CCW);
 360:	61 e0       	ldi	r22, 0x01	; 1
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 36 01 	call	0x26c	; 0x26c <DC_Start>
		ServoMotor_Rotate(angle_N90);
 368:	80 e3       	ldi	r24, 0x30	; 48
 36a:	92 e0       	ldi	r25, 0x02	; 2
 36c:	0e 94 4e 02 	call	0x49c	; 0x49c <ServoMotor_Rotate>
 370:	2f ef       	ldi	r18, 0xFF	; 255
 372:	87 ea       	ldi	r24, 0xA7	; 167
 374:	91 e6       	ldi	r25, 0x61	; 97
 376:	21 50       	subi	r18, 0x01	; 1
 378:	80 40       	sbci	r24, 0x00	; 0
 37a:	90 40       	sbci	r25, 0x00	; 0
 37c:	e1 f7       	brne	.-8      	; 0x376 <main+0x7a>
 37e:	00 c0       	rjmp	.+0      	; 0x380 <main+0x84>
 380:	00 00       	nop
 382:	c7 cf       	rjmp	.-114    	; 0x312 <main+0x16>

Disassembly of section .text.DIO_SetPinDirection:

000000a8 <DIO_SetPinDirection>:
#include "DIO_Private.h"

/*------------------------PINS---------------------------*/
void DIO_SetPinDirection(port Port, pin Pin, state State)
{
	switch(State)
  a8:	44 23       	and	r20, r20
  aa:	19 f0       	breq	.+6      	; 0xb2 <DIO_SetPinDirection+0xa>
  ac:	41 30       	cpi	r20, 0x01	; 1
  ae:	c9 f1       	breq	.+114    	; 0x122 <DIO_SetPinDirection+0x7a>
  b0:	08 95       	ret
	{
		case DIO_INPUT:
		switch (Port)
  b2:	81 30       	cpi	r24, 0x01	; 1
  b4:	91 f0       	breq	.+36     	; 0xda <DIO_SetPinDirection+0x32>
  b6:	28 f0       	brcs	.+10     	; 0xc2 <DIO_SetPinDirection+0x1a>
  b8:	82 30       	cpi	r24, 0x02	; 2
  ba:	d9 f0       	breq	.+54     	; 0xf2 <DIO_SetPinDirection+0x4a>
  bc:	83 30       	cpi	r24, 0x03	; 3
  be:	29 f1       	breq	.+74     	; 0x10a <DIO_SetPinDirection+0x62>
  c0:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(DDRA, Pin);
  c2:	2a b3       	in	r18, 0x1a	; 26
  c4:	81 e0       	ldi	r24, 0x01	; 1
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	02 c0       	rjmp	.+4      	; 0xce <DIO_SetPinDirection+0x26>
  ca:	88 0f       	add	r24, r24
  cc:	99 1f       	adc	r25, r25
  ce:	6a 95       	dec	r22
  d0:	e2 f7       	brpl	.-8      	; 0xca <DIO_SetPinDirection+0x22>
  d2:	80 95       	com	r24
  d4:	82 23       	and	r24, r18
  d6:	8a bb       	out	0x1a, r24	; 26
			break;
  d8:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(DDRB, Pin);
  da:	27 b3       	in	r18, 0x17	; 23
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	90 e0       	ldi	r25, 0x00	; 0
  e0:	02 c0       	rjmp	.+4      	; 0xe6 <DIO_SetPinDirection+0x3e>
  e2:	88 0f       	add	r24, r24
  e4:	99 1f       	adc	r25, r25
  e6:	6a 95       	dec	r22
  e8:	e2 f7       	brpl	.-8      	; 0xe2 <DIO_SetPinDirection+0x3a>
  ea:	80 95       	com	r24
  ec:	82 23       	and	r24, r18
  ee:	87 bb       	out	0x17, r24	; 23
			break;
  f0:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(DDRC, Pin);
  f2:	24 b3       	in	r18, 0x14	; 20
  f4:	81 e0       	ldi	r24, 0x01	; 1
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	02 c0       	rjmp	.+4      	; 0xfe <DIO_SetPinDirection+0x56>
  fa:	88 0f       	add	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	6a 95       	dec	r22
 100:	e2 f7       	brpl	.-8      	; 0xfa <DIO_SetPinDirection+0x52>
 102:	80 95       	com	r24
 104:	82 23       	and	r24, r18
 106:	84 bb       	out	0x14, r24	; 20
			break;
 108:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(DDRD, Pin);
 10a:	21 b3       	in	r18, 0x11	; 17
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	02 c0       	rjmp	.+4      	; 0x116 <DIO_SetPinDirection+0x6e>
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	6a 95       	dec	r22
 118:	e2 f7       	brpl	.-8      	; 0x112 <DIO_SetPinDirection+0x6a>
 11a:	80 95       	com	r24
 11c:	82 23       	and	r24, r18
 11e:	81 bb       	out	0x11, r24	; 17
			break;
 120:	08 95       	ret
		}
		break;
		case DIO_OUTPUT:
		switch (Port)
 122:	81 30       	cpi	r24, 0x01	; 1
 124:	89 f0       	breq	.+34     	; 0x148 <DIO_SetPinDirection+0xa0>
 126:	28 f0       	brcs	.+10     	; 0x132 <DIO_SetPinDirection+0x8a>
 128:	82 30       	cpi	r24, 0x02	; 2
 12a:	c9 f0       	breq	.+50     	; 0x15e <DIO_SetPinDirection+0xb6>
 12c:	83 30       	cpi	r24, 0x03	; 3
 12e:	11 f1       	breq	.+68     	; 0x174 <DIO_SetPinDirection+0xcc>
 130:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(DDRA, Pin);
 132:	2a b3       	in	r18, 0x1a	; 26
 134:	81 e0       	ldi	r24, 0x01	; 1
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	02 c0       	rjmp	.+4      	; 0x13e <DIO_SetPinDirection+0x96>
 13a:	88 0f       	add	r24, r24
 13c:	99 1f       	adc	r25, r25
 13e:	6a 95       	dec	r22
 140:	e2 f7       	brpl	.-8      	; 0x13a <DIO_SetPinDirection+0x92>
 142:	82 2b       	or	r24, r18
 144:	8a bb       	out	0x1a, r24	; 26
			break;
 146:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(DDRB, Pin);
 148:	27 b3       	in	r18, 0x17	; 23
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	02 c0       	rjmp	.+4      	; 0x154 <DIO_SetPinDirection+0xac>
 150:	88 0f       	add	r24, r24
 152:	99 1f       	adc	r25, r25
 154:	6a 95       	dec	r22
 156:	e2 f7       	brpl	.-8      	; 0x150 <DIO_SetPinDirection+0xa8>
 158:	82 2b       	or	r24, r18
 15a:	87 bb       	out	0x17, r24	; 23
			break;
 15c:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(DDRC, Pin);
 15e:	24 b3       	in	r18, 0x14	; 20
 160:	81 e0       	ldi	r24, 0x01	; 1
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	02 c0       	rjmp	.+4      	; 0x16a <DIO_SetPinDirection+0xc2>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	6a 95       	dec	r22
 16c:	e2 f7       	brpl	.-8      	; 0x166 <DIO_SetPinDirection+0xbe>
 16e:	82 2b       	or	r24, r18
 170:	84 bb       	out	0x14, r24	; 20
			break;
 172:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(DDRD, Pin);
 174:	21 b3       	in	r18, 0x11	; 17
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 c0       	rjmp	.+4      	; 0x180 <DIO_SetPinDirection+0xd8>
 17c:	88 0f       	add	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	6a 95       	dec	r22
 182:	e2 f7       	brpl	.-8      	; 0x17c <DIO_SetPinDirection+0xd4>
 184:	82 2b       	or	r24, r18
 186:	81 bb       	out	0x11, r24	; 17
 188:	08 95       	ret

Disassembly of section .text.DIO_SetPinValue:

0000018a <DIO_SetPinValue>:
		break;
	}
}
void DIO_SetPinValue(port Port, pin Pin, status Status)
{
	switch(Status)
 18a:	44 23       	and	r20, r20
 18c:	19 f0       	breq	.+6      	; 0x194 <DIO_SetPinValue+0xa>
 18e:	41 30       	cpi	r20, 0x01	; 1
 190:	c9 f1       	breq	.+114    	; 0x204 <DIO_SetPinValue+0x7a>
 192:	08 95       	ret
	{
		case DIO_LOW:
		switch (Port)
 194:	81 30       	cpi	r24, 0x01	; 1
 196:	91 f0       	breq	.+36     	; 0x1bc <DIO_SetPinValue+0x32>
 198:	28 f0       	brcs	.+10     	; 0x1a4 <DIO_SetPinValue+0x1a>
 19a:	82 30       	cpi	r24, 0x02	; 2
 19c:	d9 f0       	breq	.+54     	; 0x1d4 <DIO_SetPinValue+0x4a>
 19e:	83 30       	cpi	r24, 0x03	; 3
 1a0:	29 f1       	breq	.+74     	; 0x1ec <DIO_SetPinValue+0x62>
 1a2:	08 95       	ret
		{
			case DIO_PORTA:
			CLR_BIT(PORTA, Pin);
 1a4:	2b b3       	in	r18, 0x1b	; 27
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	90 e0       	ldi	r25, 0x00	; 0
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <DIO_SetPinValue+0x26>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	6a 95       	dec	r22
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <DIO_SetPinValue+0x22>
 1b4:	80 95       	com	r24
 1b6:	82 23       	and	r24, r18
 1b8:	8b bb       	out	0x1b, r24	; 27
			break;
 1ba:	08 95       	ret
			case DIO_PORTB:
			CLR_BIT(PORTB, Pin);
 1bc:	28 b3       	in	r18, 0x18	; 24
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <DIO_SetPinValue+0x3e>
 1c4:	88 0f       	add	r24, r24
 1c6:	99 1f       	adc	r25, r25
 1c8:	6a 95       	dec	r22
 1ca:	e2 f7       	brpl	.-8      	; 0x1c4 <DIO_SetPinValue+0x3a>
 1cc:	80 95       	com	r24
 1ce:	82 23       	and	r24, r18
 1d0:	88 bb       	out	0x18, r24	; 24
			break;
 1d2:	08 95       	ret
			case DIO_PORTC:
			CLR_BIT(PORTC, Pin);
 1d4:	25 b3       	in	r18, 0x15	; 21
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <DIO_SetPinValue+0x56>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <DIO_SetPinValue+0x52>
 1e4:	80 95       	com	r24
 1e6:	82 23       	and	r24, r18
 1e8:	85 bb       	out	0x15, r24	; 21
			break;
 1ea:	08 95       	ret
			case DIO_PORTD:
			CLR_BIT(PORTD, Pin);
 1ec:	22 b3       	in	r18, 0x12	; 18
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 c0       	rjmp	.+4      	; 0x1f8 <DIO_SetPinValue+0x6e>
 1f4:	88 0f       	add	r24, r24
 1f6:	99 1f       	adc	r25, r25
 1f8:	6a 95       	dec	r22
 1fa:	e2 f7       	brpl	.-8      	; 0x1f4 <DIO_SetPinValue+0x6a>
 1fc:	80 95       	com	r24
 1fe:	82 23       	and	r24, r18
 200:	82 bb       	out	0x12, r24	; 18
			break;
 202:	08 95       	ret
		}
		break;
		case DIO_HIGH:
		switch (Port)
 204:	81 30       	cpi	r24, 0x01	; 1
 206:	89 f0       	breq	.+34     	; 0x22a <DIO_SetPinValue+0xa0>
 208:	28 f0       	brcs	.+10     	; 0x214 <DIO_SetPinValue+0x8a>
 20a:	82 30       	cpi	r24, 0x02	; 2
 20c:	c9 f0       	breq	.+50     	; 0x240 <DIO_SetPinValue+0xb6>
 20e:	83 30       	cpi	r24, 0x03	; 3
 210:	11 f1       	breq	.+68     	; 0x256 <DIO_SetPinValue+0xcc>
 212:	08 95       	ret
		{
			case DIO_PORTA:
			SET_BIT(PORTA, Pin);
 214:	2b b3       	in	r18, 0x1b	; 27
 216:	81 e0       	ldi	r24, 0x01	; 1
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	02 c0       	rjmp	.+4      	; 0x220 <DIO_SetPinValue+0x96>
 21c:	88 0f       	add	r24, r24
 21e:	99 1f       	adc	r25, r25
 220:	6a 95       	dec	r22
 222:	e2 f7       	brpl	.-8      	; 0x21c <DIO_SetPinValue+0x92>
 224:	82 2b       	or	r24, r18
 226:	8b bb       	out	0x1b, r24	; 27
			break;
 228:	08 95       	ret
			case DIO_PORTB:
			SET_BIT(PORTB, Pin);
 22a:	28 b3       	in	r18, 0x18	; 24
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <DIO_SetPinValue+0xac>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <DIO_SetPinValue+0xa8>
 23a:	82 2b       	or	r24, r18
 23c:	88 bb       	out	0x18, r24	; 24
			break;
 23e:	08 95       	ret
			case DIO_PORTC:
			SET_BIT(PORTC, Pin);
 240:	25 b3       	in	r18, 0x15	; 21
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_SetPinValue+0xc2>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_SetPinValue+0xbe>
 250:	82 2b       	or	r24, r18
 252:	85 bb       	out	0x15, r24	; 21
			break;
 254:	08 95       	ret
			case DIO_PORTD:
			SET_BIT(PORTD, Pin);
 256:	22 b3       	in	r18, 0x12	; 18
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_SetPinValue+0xd8>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	6a 95       	dec	r22
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_SetPinValue+0xd4>
 266:	82 2b       	or	r24, r18
 268:	82 bb       	out	0x12, r24	; 18
 26a:	08 95       	ret

Disassembly of section .text.DIO_TogglePinValue:

00000384 <DIO_TogglePinValue>:
		break;
	}
}
void DIO_TogglePinValue(port Port, pin Pin)
{
	switch (Port)
 384:	81 30       	cpi	r24, 0x01	; 1
 386:	89 f0       	breq	.+34     	; 0x3aa <DIO_TogglePinValue+0x26>
 388:	28 f0       	brcs	.+10     	; 0x394 <DIO_TogglePinValue+0x10>
 38a:	82 30       	cpi	r24, 0x02	; 2
 38c:	c9 f0       	breq	.+50     	; 0x3c0 <DIO_TogglePinValue+0x3c>
 38e:	83 30       	cpi	r24, 0x03	; 3
 390:	11 f1       	breq	.+68     	; 0x3d6 <DIO_TogglePinValue+0x52>
 392:	08 95       	ret
	{
		case DIO_PORTA:
		TGL_BIT(PORTA, Pin);
 394:	2b b3       	in	r18, 0x1b	; 27
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	90 e0       	ldi	r25, 0x00	; 0
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <DIO_TogglePinValue+0x1c>
 39c:	88 0f       	add	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	6a 95       	dec	r22
 3a2:	e2 f7       	brpl	.-8      	; 0x39c <DIO_TogglePinValue+0x18>
 3a4:	82 27       	eor	r24, r18
 3a6:	8b bb       	out	0x1b, r24	; 27
		break;
 3a8:	08 95       	ret
		case DIO_PORTB:
		TGL_BIT(PORTB, Pin);
 3aa:	28 b3       	in	r18, 0x18	; 24
 3ac:	81 e0       	ldi	r24, 0x01	; 1
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <DIO_TogglePinValue+0x32>
 3b2:	88 0f       	add	r24, r24
 3b4:	99 1f       	adc	r25, r25
 3b6:	6a 95       	dec	r22
 3b8:	e2 f7       	brpl	.-8      	; 0x3b2 <DIO_TogglePinValue+0x2e>
 3ba:	82 27       	eor	r24, r18
 3bc:	88 bb       	out	0x18, r24	; 24
		break;
 3be:	08 95       	ret
		case DIO_PORTC:
		TGL_BIT(PORTC, Pin);
 3c0:	25 b3       	in	r18, 0x15	; 21
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <DIO_TogglePinValue+0x48>
 3c8:	88 0f       	add	r24, r24
 3ca:	99 1f       	adc	r25, r25
 3cc:	6a 95       	dec	r22
 3ce:	e2 f7       	brpl	.-8      	; 0x3c8 <DIO_TogglePinValue+0x44>
 3d0:	82 27       	eor	r24, r18
 3d2:	85 bb       	out	0x15, r24	; 21
		break;
 3d4:	08 95       	ret
		case DIO_PORTD:
		TGL_BIT(PORTD, Pin);
 3d6:	22 b3       	in	r18, 0x12	; 18
 3d8:	81 e0       	ldi	r24, 0x01	; 1
 3da:	90 e0       	ldi	r25, 0x00	; 0
 3dc:	02 c0       	rjmp	.+4      	; 0x3e2 <DIO_TogglePinValue+0x5e>
 3de:	88 0f       	add	r24, r24
 3e0:	99 1f       	adc	r25, r25
 3e2:	6a 95       	dec	r22
 3e4:	e2 f7       	brpl	.-8      	; 0x3de <DIO_TogglePinValue+0x5a>
 3e6:	82 27       	eor	r24, r18
 3e8:	82 bb       	out	0x12, r24	; 18
 3ea:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000516 <_fini>:
 516:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000518 <__funcs_on_exit>:
 518:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000051a <__simulator_exit>:
 51a:	08 95       	ret

Disassembly of section .text.exit:

000004b6 <exit>:
 4b6:	ec 01       	movw	r28, r24
 4b8:	0e 94 8c 02 	call	0x518	; 0x518 <__funcs_on_exit>
 4bc:	0e 94 8b 02 	call	0x516	; 0x516 <_fini>
 4c0:	ce 01       	movw	r24, r28
 4c2:	0e 94 8d 02 	call	0x51a	; 0x51a <__simulator_exit>
 4c6:	ce 01       	movw	r24, r28
 4c8:	0e 94 89 02 	call	0x512	; 0x512 <_Exit>

Disassembly of section .text._Exit:

00000512 <_Exit>:
 512:	0e 94 52 00 	call	0xa4	; 0xa4 <_exit>
